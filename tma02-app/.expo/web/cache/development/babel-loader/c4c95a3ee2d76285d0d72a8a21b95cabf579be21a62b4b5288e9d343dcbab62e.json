{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\OU\\\\TM352\\\\tma02\\\\tma02-app\\\\screens\\\\CustomerScreen.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { getLocationAddress } from '../libraries/NominatimService';\nimport * as Taxi from '../libraries/TaxiService';\nimport * as Location from 'expo-location';\nimport TimePicker from '../components/TimePicker';\nimport AddressPicker from '../components/AddressPicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getUserPermission() {\n  return _getUserPermission.apply(this, arguments);\n}\nfunction _getUserPermission() {\n  _getUserPermission = _asyncToGenerator(function* () {\n    var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n      status = _yield$Location$reque.status;\n    if (status !== 'granted') {\n      throw 'Permission to access location was denied, please check your device settings.';\n    } else {\n      return true;\n    }\n  });\n  return _getUserPermission.apply(this, arguments);\n}\nexport default function CustomerScreen(_ref) {\n  var route = _ref.route;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    customerAddress = _useState2[0],\n    setCustomerAddress = _useState2[1];\n  var _useState3 = useState(\"0\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    customerHours = _useState4[0],\n    setCustomerHours = _useState4[1];\n  var _useState5 = useState(\"0\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    customerMinutes = _useState6[0],\n    setCustomerMinutes = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    customerMatches = _useState8[0],\n    setCustomerMatches = _useState8[1];\n  var _useState9 = useState(\"0\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    customerPickupid = _useState10[0],\n    setCustomerPickupid = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    userid = _useState12[0],\n    setUserid = _useState12[1];\n  useEffect(function () {\n    console.log(\"Route params:\", route.params);\n    if (route.params && route.params.userid) {\n      setUserid(route.params.userid);\n      console.log(\"UserID updated:\", route.params.userid);\n    }\n  }, [route]);\n  var getCustomerData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var location = yield Location.getCurrentPositionAsync({});\n      var address = yield getLocationAddress(location.coords.latitude, location.coords.longitude);\n      setCustomerAddress(address.display_name);\n    });\n    return function getCustomerData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var customerMake = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var now = new Date();\n      var pickup = new Date(now.getFullYear(), now.getMonth(), now.getDate(), parseInt(customerHours), parseInt(customerMinutes));\n      var request = yield Taxi.postOrders(userid, pickup.toISOString(), pickup.toISOString(), \"1\", customerAddress);\n      setCustomerPickupid(request.id);\n    });\n    return function customerMake() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var customerCancel = function customerCancel() {\n    if (customerPickupid != \"\") Taxi.deleteOrders(userid, customerPickupid);\n    setCustomerPickupid(\"\");\n  };\n  return _jsxDEV(SafeAreaView, {\n    children: [_jsxDEV(Text, {\n      children: \"Customer Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this), _jsxDEV(Text, {\n      children: [\"UserID: \", userid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }, this), _jsxDEV(AddressPicker, {\n      label: \"Pickup address\",\n      address: customerAddress,\n      onClick: getCustomerData,\n      onChangeAddress: setCustomerAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this), _jsxDEV(TimePicker, {\n      label: \"Pickup time (24hrs)\",\n      hours: customerHours,\n      minutes: customerMinutes,\n      onChangeHours: setCustomerHours,\n      onChangeMinutes: setCustomerMinutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this), _jsxDEV(View, {\n      children: [_jsxDEV(Button, {\n        title: \"Make\",\n        onPress: customerMake\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), _jsxDEV(Button, {\n        title: \"Cancel\",\n        onPress: customerCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), _jsxDEV(Button, {\n        title: \"Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this), _jsxDEV(Text, {\n      children: [\"Matches: \", customerMatches]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 7\n  }, this);\n}","map":{"version":3,"names":["React","useState","useEffect","View","Text","SafeAreaView","Button","getLocationAddress","Taxi","Location","TimePicker","AddressPicker","jsxDEV","_jsxDEV","getUserPermission","_getUserPermission","apply","arguments","_asyncToGenerator","_yield$Location$reque","requestForegroundPermissionsAsync","status","CustomerScreen","_ref","route","_useState","_useState2","_slicedToArray","customerAddress","setCustomerAddress","_useState3","_useState4","customerHours","setCustomerHours","_useState5","_useState6","customerMinutes","setCustomerMinutes","_useState7","_useState8","customerMatches","setCustomerMatches","_useState9","_useState10","customerPickupid","setCustomerPickupid","_useState11","_useState12","userid","setUserid","console","log","params","getCustomerData","_ref2","location","getCurrentPositionAsync","address","coords","latitude","longitude","display_name","customerMake","_ref3","now","Date","pickup","getFullYear","getMonth","getDate","parseInt","request","postOrders","toISOString","id","customerCancel","deleteOrders","children","fileName","_jsxFileName","lineNumber","columnNumber","label","onClick","onChangeAddress","hours","minutes","onChangeHours","onChangeMinutes","title","onPress"],"sources":["D:/OU/TM352/tma02/tma02-app/screens/CustomerScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, SafeAreaView, Button } from 'react-native';\r\nimport { getLocationAddress } from '../libraries/NominatimService';\r\nimport * as Taxi from '../libraries/TaxiService';\r\nimport * as Location from 'expo-location';\r\nimport TimePicker from '../components/TimePicker';\r\nimport AddressPicker from '../components/AddressPicker';\r\nimport { RouteProp } from '@react-navigation/native';\r\n\r\n/**\r\n * Represents the parameter list for the root stack in the navigation.\r\n */\r\ntype RootStackParamList = {\r\n  Customer: {userid: string};\r\n};\r\n\r\n/**\r\n * Represents the props for the CustomerScreen component.\r\n */\r\ntype CustomerScreenProps = {\r\n  route: RouteProp<RootStackParamList, 'Customer'>;\r\n}\r\n\r\n/**\r\n * Requests user permission to get the GPS location of the device.\r\n * This needs to be called before the GPS is read.\r\n * \r\n * @returns true if permission is granted, otherwise throws an error.\r\n */\r\nasync function getUserPermission(): Promise<boolean> {\r\n  let { status } = await Location.requestForegroundPermissionsAsync();\r\n  if (status !== 'granted') {\r\n    throw('Permission to access location was denied, please check your device settings.');\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default function CustomerScreen({ route}: CustomerScreenProps) {\r\n\r\n    const [customerAddress, setCustomerAddress] = useState(\"\");\r\n    const [customerHours, setCustomerHours] = useState(\"0\");\r\n    const [customerMinutes, setCustomerMinutes] = useState(\"0\");\r\n    const [customerMatches, setCustomerMatches] = useState(\"\");\r\n    const [customerPickupid, setCustomerPickupid] = useState(\"0\");\r\n    const [userid,setUserid] = useState(\"\");\r\n    \r\n    /**\r\n     * useEffect hook that logs the route parameters and updates the userid state if it exists in the route params.\r\n     * @param route - The route object containing the parameters.\r\n     */\r\n    useEffect(() => {\r\n      console.log(\"Route params:\", route.params);\r\n      if (route.params && route.params.userid) {\r\n        setUserid(route.params.userid);\r\n        console.log(\"UserID updated:\", route.params.userid);\r\n      }\r\n    }, [route]);\r\n  \r\n    const getCustomerData = async () => {\r\n      const location = await Location.getCurrentPositionAsync({});\r\n  \r\n      const address = await getLocationAddress(location.coords.latitude, location.coords.longitude)\r\n      setCustomerAddress(address.display_name);\r\n    }\r\n  \r\n    const customerMake = async () => {\r\n      const now = new Date();\r\n      const pickup = new Date(now.getFullYear(), now.getMonth(), now.getDate(), parseInt(customerHours), parseInt(customerMinutes)); \r\n     \r\n      const request = await Taxi.postOrders(userid, pickup.toISOString(), pickup.toISOString(), \"1\", customerAddress);\r\n      setCustomerPickupid(request.id);\r\n      \r\n    }\r\n  \r\n    const customerCancel = () => {\r\n      if (customerPickupid != \"\")\r\n        Taxi.deleteOrders(userid, customerPickupid);\r\n      setCustomerPickupid(\"\");\r\n    }\r\n  \r\n    return (\r\n      <SafeAreaView>\r\n          <Text>\r\n            Customer Request\r\n          </Text>\r\n          <Text>UserID: {userid}</Text>\r\n          <AddressPicker label='Pickup address' address={customerAddress} onClick={getCustomerData} onChangeAddress={setCustomerAddress} />\r\n          <TimePicker label='Pickup time (24hrs)' hours={customerHours} minutes={customerMinutes} onChangeHours={setCustomerHours} onChangeMinutes={setCustomerMinutes}/>\r\n          <View>\r\n            <Button title=\"Make\" onPress={customerMake}/>\r\n            <Button title=\"Cancel\" onPress={customerCancel} />\r\n            <Button title=\"Matches\" />\r\n          </View>\r\n          <Text>\r\n              Matches: {customerMatches}\r\n          </Text>\r\n      </SafeAreaView>\r\n    )\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}