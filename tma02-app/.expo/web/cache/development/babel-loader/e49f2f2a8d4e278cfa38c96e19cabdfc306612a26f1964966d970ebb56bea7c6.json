{"ast":null,"code":"var _jsxFileName = \"D:\\\\OU\\\\TM352\\\\tma02\\\\tma02-app\\\\components\\\\AddressPicker.tsx\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddressPicker(props) {\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: props.label,\n      accessibilityLabel: props.label,\n      value: props.address,\n      onChangeText: props.onChangeAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"Set current location\",\n      onPress: props.onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'stretch',\n    paddingHorizontal: 24\n  },\n  input: {\n    height: 40,\n    margin: 5,\n    borderWidth: 1,\n    padding: 5\n  }\n});","map":{"version":3,"names":["AddressPicker","props","_jsxDEV","View","style","styles","container","children","TextInput","input","placeholder","label","accessibilityLabel","value","address","onChangeText","onChangeAddress","fileName","_jsxFileName","lineNumber","columnNumber","Button","title","onPress","onClick","StyleSheet","create","justifyContent","flexDirection","alignItems","paddingHorizontal","height","margin","borderWidth","padding"],"sources":["D:/OU/TM352/tma02/tma02-app/components/AddressPicker.tsx"],"sourcesContent":["/**\r\n * A component to allow an entry of an address. The parent view \r\n * needs to handle the address lookup\r\n * \r\n * TM352 TMA02\r\n * Change log\r\n * 3/10/23 CThomson Intial version\r\n */\r\n\r\nimport { View, Button, StyleSheet, TextInput, GestureResponderEvent } from 'react-native';\r\n\r\ntype AddressPickerProps = {\r\n  label: string;\r\n  address: string;\r\n  onClick: (event: GestureResponderEvent) => void;\r\n  onChangeAddress: (text: string) => void;\r\n};\r\n\r\nexport default function AddressPicker(props: AddressPickerProps) {\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput style={styles.input} placeholder={props.label} accessibilityLabel={props.label} value={props.address} onChangeText={props.onChangeAddress}/>\r\n      <Button \r\n        title='Set current location' \r\n        onPress={props.onClick}\r\n        /> \r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    alignItems: 'stretch',\r\n    paddingHorizontal: 24,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    margin: 5,\r\n    borderWidth: 1,\r\n    padding: 5,\r\n  }\r\n});"],"mappings":";;;;;;AAkBA,eAAe,SAASA,aAAaA,CAACC,KAAyB,EAAE;EAE/D,OACEC,OAAA,CAACC,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BL,OAAA,CAACM,SAAS;MAACJ,KAAK,EAAEC,MAAM,CAACI,KAAM;MAACC,WAAW,EAAET,KAAK,CAACU,KAAM;MAACC,kBAAkB,EAAEX,KAAK,CAACU,KAAM;MAACE,KAAK,EAAEZ,KAAK,CAACa,OAAQ;MAACC,YAAY,EAAEd,KAAK,CAACe;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACvJlB,OAAA,CAACmB,MAAM;MACLC,KAAK,EAAC,sBAAsB;MAC5BC,OAAO,EAAEtB,KAAK,CAACuB;IAAQ;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEX;AAEA,IAAMf,MAAM,GAAGoB,UAAU,CAACC,MAAM,CAAC;EAC/BpB,SAAS,EAAE;IACTqB,cAAc,EAAE,QAAQ;IACxBC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE,SAAS;IACrBC,iBAAiB,EAAE;EACrB,CAAC;EACDrB,KAAK,EAAE;IACLsB,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,CAAC;IACTC,WAAW,EAAE,CAAC;IACdC,OAAO,EAAE;EACX;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}